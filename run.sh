#!/bin/bash
# LotoF√°cil Estrat√©gica - Script de Automa√ß√£o para Linux/Mac
# Este script facilita as opera√ß√µes comuns do projeto

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

show_menu() {
    clear
    echo -e "${BLUE}"
    echo "================================================"
    echo "   üéØ LOTOF√ÅCIL ESTRAT√âGICA - AUTOMA√á√ÉO"
    echo "================================================"
    echo -e "${NC}"
    echo
    echo -e "${CYAN}   1.${NC} Iniciar servidor local (Node.js - Porta 3000)"
    echo -e "${CYAN}   2.${NC} Iniciar servidor local (Python - Porta 8000)"
    echo -e "${CYAN}   3.${NC} Validar arquivos do projeto"
    echo -e "${CYAN}   4.${NC} Gerar build de produ√ß√£o"
    echo -e "${CYAN}   5.${NC} Deploy para Netlify"
    echo -e "${CYAN}   6.${NC} Deploy para Vercel"
    echo -e "${CYAN}   7.${NC} Abrir no navegador"
    echo -e "${CYAN}   8.${NC} Instalar depend√™ncias"
    echo -e "${CYAN}   9.${NC} Limpar arquivos tempor√°rios"
    echo -e "${CYAN}   0.${NC} Sair"
    echo
    read -p "   Digite sua op√ß√£o (0-9): " choice
    echo
}

start_nodejs() {
    echo -e "${BLUE}üöÄ Iniciando servidor Node.js na porta 3000...${NC}"
    echo
    node server.js 3000
}

start_python() {
    echo -e "${BLUE}üöÄ Iniciando servidor Python na porta 8000...${NC}"
    echo
    python3 server.py 8000 || python server.py 8000
}

validate_files() {
    echo -e "${BLUE}üîç Validando arquivos do projeto...${NC}"
    echo
    
    if [ -f "index.html" ]; then
        echo -e "${GREEN}‚úÖ index.html encontrado${NC}"
    else
        echo -e "${RED}‚ùå index.html N√ÉO encontrado${NC}"
    fi
    
    if [ -f "assets/js/app.js" ]; then
        echo -e "${GREEN}‚úÖ app.js encontrado${NC}"
        if node -c assets/js/app.js 2>/dev/null; then
            echo -e "${GREEN}‚úÖ JavaScript v√°lido${NC}"
        else
            echo -e "${RED}‚ùå Erro de sintaxe no JavaScript${NC}"
        fi
    else
        echo -e "${RED}‚ùå app.js N√ÉO encontrado${NC}"
    fi
    
    if [ -f "assets/css/style.css" ]; then
        echo -e "${GREEN}‚úÖ style.css encontrado${NC}"
    else
        echo -e "${RED}‚ùå style.css N√ÉO encontrado${NC}"
    fi
    
    echo
    echo -e "${GREEN}‚úÖ Valida√ß√£o conclu√≠da!${NC}"
    read -p "Pressione Enter para continuar..."
}

build_project() {
    echo -e "${BLUE}üî® Gerando build de produ√ß√£o...${NC}"
    echo
    echo -e "${GREEN}‚úÖ Projeto est√°tico - Build conclu√≠do!${NC}"
    echo "    Todos os arquivos est√£o prontos para deploy"
    echo
    read -p "Pressione Enter para continuar..."
}

deploy_netlify() {
    echo -e "${BLUE}üåê Deploy para Netlify...${NC}"
    echo
    if [ -f "netlify.toml" ]; then
        netlify deploy --prod
    else
        echo -e "${RED}‚ùå Arquivo netlify.toml n√£o encontrado${NC}"
    fi
    read -p "Pressione Enter para continuar..."
}

deploy_vercel() {
    echo -e "${BLUE}üåê Deploy para Vercel...${NC}"
    echo
    if [ -f "vercel.json" ]; then
        vercel --prod
    else
        echo -e "${RED}‚ùå Arquivo vercel.json n√£o encontrado${NC}"
    fi
    read -p "Pressione Enter para continuar..."
}

open_browser() {
    echo -e "${BLUE}üåê Abrindo no navegador...${NC}"
    
    # Detectar SO e abrir navegador
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # Mac
        open http://localhost:3000
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        # Linux
        xdg-open http://localhost:3000
    else
        echo "Sistema n√£o suportado para abertura autom√°tica"
        echo "Acesse manualmente: http://localhost:3000"
    fi
    
    echo
    echo "Se o servidor n√£o estiver rodando, inicie-o primeiro!"
    read -p "Pressione Enter para continuar..."
}

install_deps() {
    echo -e "${BLUE}üì¶ Instalando depend√™ncias...${NC}"
    echo
    npm install
    echo
    echo -e "${GREEN}‚úÖ Depend√™ncias instaladas!${NC}"
    read -p "Pressione Enter para continuar..."
}

clean_project() {
    echo -e "${BLUE}üßπ Limpando arquivos tempor√°rios...${NC}"
    echo
    rm -rf node_modules
    rm -f *.log *.tmp
    echo
    echo -e "${GREEN}‚úÖ Limpeza conclu√≠da!${NC}"
    read -p "Pressione Enter para continuar..."
}

# Loop principal
while true; do
    show_menu
    
    case $choice in
        1)
            start_nodejs
            ;;
        2)
            start_python
            ;;
        3)
            validate_files
            ;;
        4)
            build_project
            ;;
        5)
            deploy_netlify
            ;;
        6)
            deploy_vercel
            ;;
        7)
            open_browser
            ;;
        8)
            install_deps
            ;;
        9)
            clean_project
            ;;
        0)
            clear
            echo -e "${GREEN}üëã Obrigado por usar o LotoF√°cil Estrat√©gica!${NC}"
            echo
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå Op√ß√£o inv√°lida! Pressione Enter para tentar novamente...${NC}"
            read
            ;;
    esac
done